type User {
    userId: String!
    username: String!
    created: String!
    reservations: [Reservation]
    status: UserStatus
}

input CreateUserInput {
    username: String!
    password: String!
}

type CreateUserOutput {
    user: User!
    sessionIsActive: Boolean!
}

enum UserStatus {
    ACTIVE
    DELETED
    ADMIN
}

type Query {
    login(username: String!, password: String!): User
    user(id: String!): User
}

type Mutation {
    createUser(user: CreateUserInput): CreateUserOutput
    createRandomUser: User
}
